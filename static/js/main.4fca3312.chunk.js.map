{"version":3,"sources":["tic-tac-toe/hooks/useRows.ts","tic-tac-toe/components/Board.tsx","tic-tac-toe/inactive/Inactive.tsx","tic-tac-toe/components/Dashboard.tsx","info/changelog/inactive/inactive.tsx","info/changelog/Changelog.tsx","info/Todo/inactive/Inactive.tsx","info/Todo/Todo.tsx","App.tsx","index.tsx"],"names":["emptySquares","output","Array","i","length","row","j","isValidTurn","turn","Board","props","useState","rows","updateRows","column","newRows","newRow","useRows","updateSquare","clearBoard","changeTurn","winner","setWinner","newWinner","board","victory_triplets","tie","lastTurn","ctr","getSquare","win","counter","X","O","empty","cmp","square","Winner","className","map","array","value","onClick","disabled","Math","floor","Error","Inactive","enabler","href","Dashboard","active","disable","enable","func","Changelog","weeks","week_one","push","week","Todo","content","App","viewing","updateViewing","addViewing","component","concat","stopViewing","indexOf","slice","a","Cookies","set","includes","Button","get","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fca3312.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction emptySquares(){\r\n    const output = Array<Array<\"X\" | \"O\" | null>>(3);\r\n    for(let i = 0;i < output.length;i++){\r\n        let row = new Array<null>(3);\r\n        for(let j = 0;j < row.length;j++){\r\n            row[j] = null;\r\n        }\r\n    output[i] = row;\r\n    }\r\n    return output;\r\n}\r\n\r\nexport function useRows(): [Array<Array<\"X\" | \"O\" | null>>,(column: number, row: number, turn: \"X\" | \"O\") => undefined, () => void]{\r\n    const [rows, updateRows] = useState(emptySquares);\r\n    const updateSquare = (column: number,row: number,turn: \"X\" | \"O\") => {\r\n        let newRows = new Array<Array<\"X\" | \"O\" | null>>(3);\r\n        let newRow = new Array<\"X\" | \"O\" | null>(3);\r\n        for(let i = 0;i < newRow.length;i++){\r\n            if(i !== column){\r\n                newRow[i] = rows[row][i]\r\n            }\r\n            else{\r\n                newRow[i] = turn;\r\n            }\r\n        }\r\n        for(let i = 0;i < newRows.length;i++){\r\n            if(i !== row){\r\n                newRows[i] = rows[i]\r\n            }\r\n            else{\r\n                newRows[i] = newRow;\r\n            }\r\n        }\r\n        updateRows(newRows);\r\n        return undefined;\r\n        \r\n    }\r\n    const emptyAll = () => {\r\n        updateRows(emptySquares());\r\n    }\r\n    return [rows, updateSquare, emptyAll];\r\n\r\n}","import { useState } from \"react\";\r\nimport { useRows } from \"../hooks/useRows\";\r\n\r\ninterface empty {\r\n\r\n}\r\n\r\nfunction isValidTurn(turn: string):turn is \"X\" | \"O\"{\r\n    return turn === \"X\" || turn === \"O\";\r\n}\r\n\r\nexport function Board(props: empty): JSX.Element{\r\n    const [rows, updateSquare, clearBoard] = useRows();\r\n    const [turn, changeTurn] = useState(\"X\");\r\n    const [winner, setWinner] = useState(\"nobody\");\r\n    let newWinner = null;\r\n    if(isValidTurn(turn)){\r\n        newWinner = Winner(rows,turn);\r\n    }\r\n    if(newWinner !== null && winner === \"nobody\"){\r\n        setWinner(newWinner);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"game-info\">\r\n            {winner === \"nobody\" ? <p>{turn}'s turn</p> : winner === \"tie\" ? <p>Tie!</p> : <p>Winner: {winner}</p>}\r\n        </div>\r\n        <div className=\"game-board\">\r\n            {rows.map((row: Array<\"X\" | \"O\" | null>,i: number, array: Array<Array<\"X\" | \"O\" | null>>) => {\r\n                return <div key={i} className=\"board-row\">\r\n                    {array[i].map((value: \"X\" | \"O\" | null,j: number) => {\r\n                        if(isValidTurn(turn)){\r\n                            return <button key={Math.floor(i/3) + j % 3} onClick={() => {updateSquare(j,i,turn); changeTurn(turn === \"X\" ? \"O\" : \"X\")}} disabled={winner !== \"nobody\" || rows[i][j] != null}>{value}</button>\r\n                        }\r\n                        else{\r\n                            throw Error(`Invalid player ${turn}`);\r\n                        }\r\n                    })}\r\n                </div>\r\n            })}\r\n            <button onClick={() => {setWinner(\"nobody\"); clearBoard(); changeTurn(\"X\");}}>reset</button>\r\n        </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction getSquare(board: Array<Array<\"X\" | \"O\" | null>>,i: number): \"X\" | \"O\" | null{\r\n    return board[Math.floor(i/3)][i % 3]\r\n}\r\n\r\ninterface Counter {\r\n    X: number,\r\n    O: number,\r\n    empty: number\r\n}\r\n\r\nfunction Winner(board: Array<Array<\"X\" | \"O\" | null>>,turn: \"X\" | \"O\"): \"X\" | \"O\" | \"tie\" | null{\r\n    const victory_triplets = [\r\n        [0,1,2],\r\n        [0,3,6],\r\n        [0,4,8],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [3,4,5],\r\n        [6,4,2],\r\n        [6,7,8]\r\n    ]\r\n    let tie = true;\r\n    let lastTurn = true;\r\n    let ctr = 0;\r\n    for(let i = 0;i < 9;i++){\r\n        if(getSquare(board,i) === null){\r\n            ctr++;\r\n        }\r\n    }\r\n    if(ctr >= 2){\r\n        lastTurn = false;\r\n    }\r\n    for(let win = 0;win < victory_triplets.length;win++){\r\n        let counter: Counter = {X: 0,O: 0,empty: 0}\r\n        let cmp = getSquare(board,victory_triplets[win][0])\r\n        for(let i = 0;i < 3;i++){\r\n            let square = getSquare(board,victory_triplets[win][i]);\r\n            if(square === null){\r\n                counter.empty++;\r\n            }\r\n            else if(square === \"X\"){\r\n                counter.X++;\r\n            }\r\n            else{\r\n                counter.O++;\r\n            }\r\n\r\n        }\r\n        if(counter.X === 3 || counter.O === 3){\r\n            return cmp;\r\n        }\r\n        if(lastTurn && turn === \"X\"){\r\n            counter.O--;\r\n        }\r\n        else if(lastTurn && turn === \"O\"){\r\n            counter.X--;\r\n        }\r\n        if((counter.X + counter.empty === 3) || (counter.O + counter.empty === 3)){\r\n            tie = false;\r\n        }\r\n    }\r\n    return tie ? \"tie\" : null;\r\n}","import { inactiveProps } from \"../../App\"\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return (\r\n    <div>\r\n        <h2><button className=\"link\" onClick={props.enabler}>Tic-Tac-Toe</button></h2>\r\n        <p>This is based on this <a href=\"https://reactjs.org/tutorial/tutorial.html\">React tutorial</a>, but it uses hooks and function components instead of the class-based approach. The stying is a slight modification of the css presented in that tutorial.</p>\r\n    </div>\r\n    )\r\n}","import { Board } from \"./Board\";\r\nimport { Inactive } from \"../inactive/Inactive\";\r\n\r\ninterface dashboardProps{\r\n    disable: () => void,\r\n    enable: () => void,\r\n    active: boolean,\r\n}\r\n\r\nexport function Dashboard(props: dashboardProps){\r\n    return props.active ? (\r\n        <section>\r\n            <div>\r\n                <Board />\r\n            </div>\r\n            <footer>\r\n                <button className=\"small-link\" onClick={props.disable}>description</button>\r\n            </footer>\r\n        </section>\r\n\r\n    ) : (\r\n        <Inactive enabler = {props.enable}/>\r\n    )\r\n}","interface func {\r\n    func: () => void\r\n}\r\nexport function Inactive(props: func){\r\n    return (\r\n        <button className=\"link\" onClick={props.func}>Changelog</button>\r\n    )\r\n\r\n}","import { Inactive } from \"./inactive/inactive\";\r\n\r\ninterface ChangelogProps {\r\n    disable: () => void,\r\n    enable: () => void,\r\n    active: boolean,\r\n}\r\n\r\nexport function Changelog(props: ChangelogProps){\r\n    if(props.active){\r\n        let weeks = new Array<Array<string>>();\r\n        let week_one = new Array<string>();\r\n        week_one.push(\"Created this page for the portfolio and added my name, email, and the repository this page is being hosted from to it.\");\r\n        week_one.push(\"Created the tic-tac-toe game and added it to this page (see the game above for the description.)\");\r\n        week_one.push(\"Added the changelog and the todo list to this page.\")\r\n        week_one.push(\"Added a button to hide all open apps to this page.\")\r\n        week_one.push(\"Added interface to show or hide react components to view different projects.\")\r\n        week_one.push(\"Updated tic-tac-toe game to tie when the game can no longer be won.\")\r\n        weeks.push(week_one);\r\n    \r\n        return <section>\r\n            <div>\r\n                {weeks.map((week: Array<string>, i: number) => {\r\n                    return <div>\r\n                        <h1 className=\"large-bold\">Week {i+1}</h1>\r\n                        <ul>\r\n                            {week.map((value: string, j: number) => {\r\n                            return <li key = {j}><p>{value}</p></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <footer>\r\n                    <button className=\"small-link\" onClick={props.disable}>collapse</button>\r\n                </footer>\r\n        </section>\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <Inactive func={props.enable}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import { inactiveProps } from \"../../../App\";\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return ( \r\n        <div>\r\n            <button className=\"link\" onClick={props.enabler}>Todo</button>\r\n        </div>\r\n    );\r\n}","\r\nimport { Inactive } from \"./inactive/Inactive\";\r\n\r\ninterface TodoProps{\r\n    disable: () => void,\r\n    enable: () => void,\r\n    active: boolean,\r\n}\r\n\r\nexport function Todo(props: TodoProps): JSX.Element{\r\n    if(props.active){\r\n        let output = new Array<string>();\r\n        output.push(\"Add a singleplayer mode with a basic AI to tic-tac-toe.\");\r\n        output.push(\"Add a game of checkers to the portfolio.\");\r\n        output.push(\"Add a cookie generator that puts a non-functional cookie in your browser.\")\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {output.map((content: string, i: number) => {\r\n                        return <li key={i}><p>{content}</p></li>;\r\n                    })}\r\n                </ul>\r\n                <button className=\"small-link\" onClick={props.disable}>collapse</button>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return <Inactive enabler = {props.enable}/>\r\n    }\r\n}","import { useState } from 'react';\r\nimport './App.scss';\r\nimport {Dashboard} from \"./tic-tac-toe/components/Dashboard\";\r\nimport {Changelog} from \"./info/changelog/Changelog\";\r\nimport { Todo } from './info/Todo/Todo';\r\nimport Cookies from \"universal-cookie\";\r\nimport Button from \"react-bootstrap/Button\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nexport interface inactiveProps{\r\n  enabler: () => void\r\n}\r\n\r\nfunction App() {\r\n  const [viewing, updateViewing] = useState(() => {return new Array<(props: any) => JSX.Element>();});\r\n  function addViewing(component: (props: any) => JSX.Element): void{\r\n    updateViewing(viewing.concat([component]))\r\n  }\r\n\r\n  function stopViewing(component: (props: any) => JSX.Element): void{\r\n    const i = viewing.indexOf(component);\r\n    if(i !== -1){\r\n      updateViewing(viewing.slice(0,i).concat(viewing.slice(i+1,viewing.length)));\r\n    }\r\n  }\r\n\r\n  function viewNothing(): void{\r\n    updateViewing(new Array<(props: any) => JSX.Element>());\r\n  }\r\n\r\n  async function setCookie(): Promise<void>{\r\n    const cookies = new Cookies();\r\n    cookies.set(\"test\",\"this is a test\");\r\n  }\r\n\r\n  function viewCookie(): void{\r\n    const cookies = new Cookies();\r\n    if(cookies.get(\"test\")){\r\n      alert(\"You have a cookie!\");\r\n    }\r\n    else{\r\n      alert(\"You are cookieless!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n  <section>\r\n    <div>\r\n      Hi! my name is Lucas Driscoll (email <a href = \"mailto:lucasd@udel.edu\">lucasd@udel.edu</a>), and this is the first page of my CISC 275-010 portfolio! this page is hosted on github pages using <a href=\"https://github.com/Lukerd-29-00/Portfolio\">this repository</a>.\r\n    </div>\r\n    <hr/>\r\n    {<Dashboard disable={() =>{stopViewing(Dashboard)}} enable={() =>{addViewing(Dashboard)}} active={viewing.includes(Dashboard)}/>}\r\n    <hr/>\r\n    <div>\r\n    Click this link to get a cookie!\r\n    </div>\r\n    <div>\r\n      <Button onClick = {setCookie}>get cookie</Button>\r\n    </div>\r\n    <div>\r\n      <Button onClick={viewCookie}>see if cookie is present</Button>\r\n    </div>\r\n    <hr/>\r\n    <footer>\r\n      <Changelog disable = {() => {stopViewing(Changelog)}} enable={() => {addViewing(Changelog)}} active={viewing.includes(Changelog)}/>\r\n      {viewing.includes(Changelog) || viewing.includes(Todo) ? <hr/> : <></>}\r\n      <Todo disable={() => {stopViewing(Todo)}} enable={() => {addViewing(Todo)}} active={viewing.includes(Todo)}/>\r\n      {viewing.includes(Todo) ? <hr/> : <></>}\r\n      <button className=\"link\" onClick={viewNothing}>Hide all</button>\r\n    </footer>\r\n  </section>\r\n  </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}