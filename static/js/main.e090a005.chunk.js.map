{"version":3,"sources":["tic-tac-toe/hooks/useRows.ts","tic-tac-toe/components/TicTacToeBoard.tsx","tic-tac-toe/inactive/Inactive.tsx","tic-tac-toe/components/TicTacToeDashboard.tsx","info/changelog/inactive/inactive.tsx","info/changelog/Changelog.tsx","info/Todo/inactive/Inactive.tsx","info/Todo/Todo.tsx","Checkers/inactive/Inactive.tsx","Checkers/components/CheckersSquare.tsx","Checkers/components/CheckersBoard.tsx","Checkers/hooks/UseSquares.ts","Checkers/components/CheckersDashboard.tsx","App.tsx","index.tsx"],"names":["emptySquares","output","Array","i","length","row","j","isValidTurn","turn","TicTacToeBoard","props","useState","rows","updateRows","column","newRows","newRow","useRows","updateSquare","clearBoard","changeTurn","winner","setWinner","newWinner","board","victory_triplets","tie","lastTurn","ctr","getSquare","win","counter","X","O","empty","cmp","square","Winner","className","map","array","value","onClick","disabled","Math","floor","Error","Inactive","enabler","href","TicTacToeDashboard","active","disable","enable","func","Changelog","weeks","week_one","week_two","week_three","push","week","Todo","CheckersSquare","deselect","position","startingSquare","col","firstMove","moving","moves","highlighted","color","selectStartingSquare","selectSquare","selectPiece","setFirstMove","move","destination","piece","movePiece","selectedPiece","king","newPiece","newSquare","endsTurn","endTurn","redsTurn","child","getAdjacentSquares","up","down","upanddown","concat","sqs","undefined","pos","getAdjacentEmptySquares","filter","sq","CheckersBoard","pieceColor","squares","updateSquares","start","newSquares","deletes","targetSquares","highlight","useSquares","setSquaresHighlighted","selectedSquare","setSelectedSquare","setRedsTurn","isFirstMove","setIsFirstMove","setStartingSquare","allSquares","redTurn","getAdjacentEnemyPieces","place","rowIndex","CheckersDashboard","App","viewing","updateViewing","addViewing","component","stopViewing","indexOf","slice","a","Cookies","set","includes","id","Button","get","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e090a005.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction emptySquares(){\r\n    const output = Array<Array<\"X\" | \"O\" | null>>(3);\r\n    for(let i = 0;i < output.length;i++){\r\n        let row = new Array<null>(3);\r\n        for(let j = 0;j < row.length;j++){\r\n            row[j] = null;\r\n        }\r\n    output[i] = row;\r\n    }\r\n    return output;\r\n}\r\n\r\nexport function useRows(): [Array<Array<\"X\" | \"O\" | null>>,(column: number, row: number, turn: \"X\" | \"O\") => undefined, () => void]{\r\n    const [rows, updateRows] = useState(emptySquares);\r\n    const updateSquare = (column: number,row: number,turn: \"X\" | \"O\") => {\r\n        let newRows = new Array<Array<\"X\" | \"O\" | null>>(3);\r\n        let newRow = new Array<\"X\" | \"O\" | null>(3);\r\n        for(let i = 0;i < newRow.length;i++){\r\n            if(i !== column){\r\n                newRow[i] = rows[row][i]\r\n            }\r\n            else{\r\n                newRow[i] = turn;\r\n            }\r\n        }\r\n        for(let i = 0;i < newRows.length;i++){\r\n            if(i !== row){\r\n                newRows[i] = rows[i]\r\n            }\r\n            else{\r\n                newRows[i] = newRow;\r\n            }\r\n        }\r\n        updateRows(newRows);\r\n        return undefined;\r\n        \r\n    }\r\n    const emptyAll = () => {\r\n        updateRows(emptySquares());\r\n    }\r\n    return [rows, updateSquare, emptyAll];\r\n\r\n}","import { useState } from \"react\";\r\nimport { useRows } from \"../hooks/useRows\";\r\n\r\ninterface empty {\r\n\r\n}\r\n\r\nfunction isValidTurn(turn: string):turn is \"X\" | \"O\"{\r\n    return turn === \"X\" || turn === \"O\";\r\n}\r\n\r\nexport function TicTacToeBoard(props: empty): JSX.Element{\r\n    const [rows, updateSquare, clearBoard] = useRows();\r\n    const [turn, changeTurn] = useState(\"X\");\r\n    const [winner, setWinner] = useState(\"nobody\");\r\n    let newWinner = null;\r\n    if(isValidTurn(turn)){\r\n        newWinner = Winner(rows,turn);\r\n    }\r\n    if(newWinner !== null && winner === \"nobody\"){\r\n        setWinner(newWinner);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"game-info\">\r\n            {winner === \"nobody\" ? <p>{turn}'s turn</p> : winner === \"tie\" ? <p>Tie!</p> : <p>Winner: {winner}</p>}\r\n        </div>\r\n        <div className=\"game-board\">\r\n            {rows.map((row: Array<\"X\" | \"O\" | null>,i: number, array: Array<Array<\"X\" | \"O\" | null>>) => {\r\n                return <div key={i} className=\"board-row\">\r\n                    {array[i].map((value: \"X\" | \"O\" | null,j: number) => {\r\n                        if(isValidTurn(turn)){\r\n                            return <button key={Math.floor(i/3) + j % 3} onClick={() => {updateSquare(j,i,turn); changeTurn(turn === \"X\" ? \"O\" : \"X\")}} disabled={winner !== \"nobody\" || rows[i][j] != null}>{value}</button>\r\n                        }\r\n                        else{\r\n                            throw Error(`Invalid player ${turn}`);\r\n                        }\r\n                    })}\r\n                </div>\r\n            })}\r\n            <button onClick={() => {setWinner(\"nobody\"); clearBoard(); changeTurn(\"X\");}}>reset</button>\r\n        </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction getSquare(board: Array<Array<\"X\" | \"O\" | null>>,i: number): \"X\" | \"O\" | null{\r\n    return board[Math.floor(i/3)][i % 3]\r\n}\r\n\r\ninterface Counter {\r\n    X: number,\r\n    O: number,\r\n    empty: number\r\n}\r\n\r\nfunction Winner(board: Array<Array<\"X\" | \"O\" | null>>,turn: \"X\" | \"O\"): \"X\" | \"O\" | \"tie\" | null{\r\n    const victory_triplets = [\r\n        [0,1,2],\r\n        [0,3,6],\r\n        [0,4,8],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [3,4,5],\r\n        [6,4,2],\r\n        [6,7,8]\r\n    ]\r\n    let tie = true;\r\n    let lastTurn = true;\r\n    let ctr = 0;\r\n    for(let i = 0;i < 9;i++){\r\n        if(getSquare(board,i) === null){\r\n            ctr++;\r\n        }\r\n    }\r\n    if(ctr >= 2){\r\n        lastTurn = false;\r\n    }\r\n    for(let win = 0;win < victory_triplets.length;win++){\r\n        let counter: Counter = {X: 0,O: 0,empty: 0}\r\n        let cmp = getSquare(board,victory_triplets[win][0])\r\n        for(let i = 0;i < 3;i++){\r\n            let square = getSquare(board,victory_triplets[win][i]);\r\n            if(square === null){\r\n                counter.empty++;\r\n            }\r\n            else if(square === \"X\"){\r\n                counter.X++;\r\n            }\r\n            else{\r\n                counter.O++;\r\n            }\r\n\r\n        }\r\n        if(counter.X === 3 || counter.O === 3){\r\n            return cmp;\r\n        }\r\n        if(lastTurn && turn === \"X\"){\r\n            counter.O--;\r\n        }\r\n        else if(lastTurn && turn === \"O\"){\r\n            counter.X--;\r\n        }\r\n        if((counter.X + counter.empty === 3) || (counter.O + counter.empty === 3)){\r\n            tie = false;\r\n        }\r\n    }\r\n    return tie ? \"tie\" : null;\r\n}","import { inactiveProps } from \"../../App\"\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return (\r\n    <div>\r\n        <h2><button className=\"link\" onClick={props.enabler}>Tic-Tac-Toe</button></h2>\r\n        <p>This is based on this <a href=\"https://reactjs.org/tutorial/tutorial.html\">React tutorial</a>, but it uses hooks and function components instead of the class-based approach. The stying is a slight modification of the css presented in that tutorial. <a href=\"https://github.com/Lukerd-29-00/Portfolio/tree/master/src/tic-tac-toe\">click here</a> to view the source code.</p>\r\n    </div>\r\n    )\r\n}","import { TicTacToeBoard } from \"./TicTacToeBoard\";\r\nimport { Inactive } from \"../inactive/Inactive\";\r\nimport { DashboardProps } from \"../../App\";\r\n\r\nexport function TicTacToeDashboard(props: DashboardProps){\r\n    return props.active ? (\r\n        <section>\r\n            <div>\r\n                <TicTacToeBoard />\r\n            </div>\r\n            <footer>\r\n                <button className=\"small-link\" onClick={props.disable}>description</button>\r\n            </footer>\r\n        </section>\r\n\r\n    ) : (\r\n        <Inactive enabler = {props.enable}/>\r\n    )\r\n}","interface func {\r\n    func: () => void\r\n}\r\nexport function Inactive(props: func){\r\n    return (\r\n        <button className=\"link\" onClick={props.func}>Changelog</button>\r\n    )\r\n\r\n}","import { Inactive } from \"./inactive/inactive\";\r\n\r\ninterface ChangelogProps {\r\n    disable: () => void,\r\n    enable: () => void,\r\n    active: boolean,\r\n}\r\n\r\nexport function Changelog(props: ChangelogProps){\r\n    if(props.active){\r\n        let weeks = new Array<Array<string>>();\r\n        let week_one = new Array<string>();\r\n        let week_two = new Array<string>();\r\n        let week_three = new Array<string>();\r\n        weeks.push(week_one);\r\n        weeks.push(week_two);\r\n        weeks.push(week_three);\r\n        week_one.push(\"Created this page for the portfolio and added my name, email, and the repository this page is being hosted from to it.\");\r\n        week_one.push(\"Created the tic-tac-toe game and added it to this page (see the game above for the description.)\");\r\n        week_one.push(\"Added the changelog and the todo list to this page.\")\r\n        week_one.push(\"Added a button to hide all open apps to this page.\")\r\n        week_one.push(\"Added interface to show or hide react components to view different projects.\")\r\n        week_one.push(\"Updated tic-tac-toe game to tie when the game can no longer be won.\")\r\n\r\n        week_two.push(\"Added checkers board that the pieces can move in (The project is still a work in progress.\")\r\n        week_two.push(\"Added the cookie module with a button to add a cookie to the browser and a button to detect if the cookie has been issued.\")\r\n\r\n        week_three.push(\"Added the ability to defeat rival pieces in checkers (including eliminating a chain of them).\")\r\n        week_three.push(\"Added functionality to keep track of whose turn it is in checkers.\");\r\n        week_three.push(\"Finished the code that determines where a piece can move in checkers.\")\r\n        week_three.push(\"Added kings to checkers, which are pieces that can move in both directions, rather than only moving toward the opponent's side of the board. Was unable to properly center the * in them that marks them as kings.\")\r\n        week_three.push(\"Added shadows to the checkers pieces to make them look three-dimensional.\")\r\n        week_three.push(\"Added links to directories in the repository containing the code for each module for ease of grading.\")\r\n        return <section>\r\n            <div>\r\n                {weeks.map((week: Array<string>, i: number) => {\r\n                    return <div>\r\n                        <h1 className=\"large-bold\">Week {i+1}</h1>\r\n                        <ul>\r\n                            {week.map((value: string, j: number) => {\r\n                            return <li key = {j}><p>{value}</p></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <footer>\r\n                    <button className=\"small-link\" onClick={props.disable}>collapse</button>\r\n                </footer>\r\n        </section>\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <Inactive func={props.enable}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import { inactiveProps } from \"../../../App\";\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return ( \r\n        <div>\r\n            <button className=\"link\" onClick={props.enabler}>Todo</button>\r\n        </div>\r\n    );\r\n}","\r\nimport { Inactive } from \"./inactive/Inactive\";\r\n\r\ninterface TodoProps{\r\n    disable: () => void,\r\n    enable: () => void,\r\n    active: boolean,\r\n}\r\n\r\nexport function Todo(props: TodoProps): JSX.Element{\r\n    if(props.active){\r\n        let weeks = new Array<Array<string>>();\r\n        let week_one = new Array<string>();\r\n        let week_two = new Array<string>();\r\n        let week_three = new Array<string>();\r\n        weeks.push(week_one);\r\n        weeks.push(week_two)\r\n        weeks.push(week_three)\r\n        week_one.push(\"Add a singleplayer mode with a basic AI to tic-tac-toe.\");\r\n        week_one.push(\"Add a game of checkers to the portfolio.\");\r\n        week_one.push(\"Add a cookie generator that puts a non-functional cookie in your browser.\")\r\n\r\n        week_two.push(\"Finish Checkers game\")\r\n        week_two.push(\"Create a bootstrap-styled page\")\r\n        \r\n        week_three.push(\"Overhaul the page to make it more visually appealing, to hone my css skills (which is definitely my weakest area).\")\r\n        week_three.push(\"Add a check to see if the player has won checkers, and display whose turn it is in a similar fashion to tic-tac-toe.\")\r\n    \r\n        return <section>\r\n            <div>\r\n                {weeks.map((week: Array<string>, i: number) => {\r\n                    return <div>\r\n                        <h1 className=\"large-bold\">Week {i+2}</h1>\r\n                        <ul>\r\n                            {week.map((value: string, j: number) => {\r\n                            return <li key = {j}><p>{value}</p></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <footer>\r\n                    <button className=\"small-link\" onClick={props.disable}>collapse</button>\r\n                </footer>\r\n        </section>\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <Inactive enabler={props.enable}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import { inactiveProps } from \"../../App\"\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return (\r\n    <div>\r\n        <h2><button className=\"link\" onClick={props.enabler}>Checkers (WIP)</button></h2>\r\n        <p>This is a work-in-progress checkers game. It works exactly like checkers, but there is currently no win condition. Kings have a gold star in them, and you can deselect a piece that you're moving if you haven't moved yet by clicking on it. <a href=\"https://github.com/Lukerd-29-00/Portfolio/tree/master/src/Checkers\">click here</a> to see the source code.</p>\r\n    </div>\r\n    )\r\n}","import {Piece, Square, Move} from \"./CheckersBoard\"\r\nexport interface SquareProps {\r\n    square: Square\r\n    redsTurn: boolean\r\n    moves: Array<Move>\r\n    selectSquare: (square: Square | null) => void\r\n    movePiece: (move: Move) => void\r\n    firstMove: boolean\r\n    setFirstMove: (firstMove: boolean) => void\r\n    selectPiece: (piece: Piece | null) => void\r\n    selectStartingSquare: (square: Square | null) => void\r\n    selectedPiece: Piece | null\r\n    startingSquare: Square | null\r\n    endTurn: () => void\r\n    child: JSX.Element\r\n}\r\n\r\nexport function CheckersSquare(props: SquareProps){\r\n    const deselect = props.square.position.row === props.startingSquare?.position.row && props.square.position.col === props.startingSquare?.position.col && props.firstMove\r\n    const moving: boolean = props.moves.length > 0\r\n    const onClick = () => {\r\n        if(deselect){\r\n            props.selectStartingSquare(null);\r\n            props.selectSquare(null);\r\n            props.selectPiece(null);\r\n            props.setFirstMove(true);\r\n        }\r\n        else if(moving){\r\n            for(const move of props.moves){\r\n                if(move.destination.position.row === props.square.position.row && move.destination.position.col === props.square.position.col){\r\n                    if(move.destination.piece === null){\r\n                        props.movePiece(move);\r\n                        props.setFirstMove(false);\r\n                        if(move.destination.position.row === 0 && (props.selectedPiece as Piece).color === \"red\" && !(props.selectedPiece as Piece).king){\r\n                            const newPiece = {color: (\"red\" as \"black\" | \"red\"),king: true}\r\n                            const newSquare = {position: move.destination.position, color: move.destination.color, highlighted: move.destination.highlighted, piece: newPiece} \r\n                            props.selectStartingSquare(newSquare)\r\n                            props.selectPiece(newPiece); \r\n                            props.selectSquare(newSquare) \r\n                        }\r\n                        else if(move.destination.position.row === 7 && (props.selectedPiece as Piece).color === \"black\" && !(props.selectedPiece as Piece).king){\r\n                            const newPiece = {color: (\"black\" as \"black\" | \"red\"),king: true}\r\n                            const newSquare = {position: move.destination.position, color: move.destination.color, highlighted: move.destination.highlighted, piece: newPiece} \r\n                            props.selectStartingSquare(newSquare)\r\n                            props.selectPiece(newPiece); \r\n                            props.selectSquare(newSquare) \r\n                        }\r\n                        else{\r\n                            props.selectSquare(move.destination);\r\n                            props.selectStartingSquare(move.destination)\r\n                        }\r\n                        if(move.endsTurn){\r\n                            props.endTurn();\r\n                        }\r\n                        \r\n                    }\r\n                    else{\r\n                        props.selectSquare(props.square)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            props.selectStartingSquare(props.square);\r\n            props.selectSquare(props.square);\r\n            props.selectPiece(props.square.piece)\r\n        }\r\n    }\r\n    return (\r\n            <button data-testid=\"checkers-square\" className={props.square.highlighted ? \"square highlighted\" : props.square.color === \"black\" ? \"square dark\" : \"square\"} onClick={onClick} disabled={moving ? !deselect && !props.square.highlighted : !(props.square.piece !== null && ((props.redsTurn && props.square.piece.color === \"red\") || (!props.redsTurn && props.square.piece.color === \"black\")))} key={props.square.position.col}>{props.child}</button>\r\n    )\r\n\r\n}","import {useState} from 'react'\r\nimport { getPositionOfLineAndCharacter } from 'typescript';\r\nimport { useSquares } from '../hooks/UseSquares'\r\nimport { CheckersSquare, SquareProps } from './CheckersSquare';\r\nexport interface Position {\r\n    row: number,\r\n    col: number\r\n}\r\n\r\n//red pieces are on the bottom, black are on the top. Top row is zero, bottom row is 7.\r\nexport interface Piece {\r\n    color: \"black\" | \"red\"\r\n    king: boolean\r\n}\r\n\r\nexport interface Square{\r\n    piece: Piece | null\r\n    color: \"white\" | \"black\"\r\n    highlighted: boolean,\r\n    position: Position\r\n}\r\n\r\nexport interface Move {\r\n    deletes: Square | null\r\n    destination: Square\r\n    endsTurn: boolean\r\n}\r\n\r\ninterface NoProps {\r\n\r\n}\r\n\r\n\r\nfunction getAdjacentSquares(square: Square, board: Array<Array<Square>>, piece?: Piece): Array<Square>{\r\n    const up = [{row: square.position.row-1,col:square.position.col-1},{row:square.position.row-1,col:square.position.col+1}];\r\n    const down = [{row: square.position.row+1,col:square.position.col-1},{row:square.position.row+1,col: square.position.col+1}]\r\n    const upanddown = up.concat(down)\r\n    let sqs = new Array<Position>();\r\n    if(piece === undefined && square.piece === null){\r\n        throw Error(\"No piece to get targets of!\")\r\n    }\r\n    else if(piece === undefined){\r\n        piece = (square.piece as Piece);\r\n    }\r\n    let output = new Array<Square>();\r\n    if(piece.king){\r\n        sqs = upanddown\r\n    }\r\n    else if(piece.color === \"red\"){\r\n        sqs = up\r\n    }\r\n    else{\r\n        sqs = down\r\n    }\r\n    for(const pos of sqs){\r\n        if(pos.row >= 0 && pos.row <= 7 && pos.col >= 0 && pos.col <= 7){\r\n            output.push(board[pos.row][pos.col]);\r\n        }\r\n    }\r\n    return output;\r\n}\r\n\r\nfunction getAdjacentEnemyPieces(square: Square | null,board: Array<Array<Square>>,piece?: Piece): Array<Square>{\r\n    if(square === null){\r\n        return [];\r\n    }\r\n    else if(square.piece === null && piece === undefined){\r\n        throw Error(\"No piece to move!\")\r\n    }\r\n    else if(piece === undefined){\r\n        piece = (square.piece as Piece);\r\n    }\r\n    return getAdjacentSquares(square,board,piece).filter((sq: Square) => {\r\n        return sq.piece !== null && sq.piece.color !== (piece as Piece).color\r\n    })\r\n}\r\n\r\nfunction getAdjacentEmptySquares(square: Square | null, board: Array<Array<Square>>,piece?: Piece): Array<Square>{\r\n    if(square == null || square.piece === null){\r\n        return [];\r\n    }\r\n    return getAdjacentSquares(square,board,piece).filter((sq: Square) => {\r\n        return sq.piece === null;\r\n    })\r\n}\r\n\r\n\r\nexport function CheckersBoard(props: NoProps){\r\n    const [squares, movePiece, setSquaresHighlighted] = useSquares();\r\n    const [selectedSquare, setSelectedSquare] = useState<Square | null>(null);\r\n    const [redsTurn, setRedsTurn] = useState(true);\r\n    const [isFirstMove, setIsFirstMove] = useState(true);\r\n    const [selectedPiece, selectPiece] = useState<Piece | null>(null)\r\n    const [startingSquare, setStartingSquare] = useState<Square | null>(null);\r\n    const [winner, setWinner] = useState<string | null>(null);\r\n    const selectSquare = (sq: Square | null) => {\r\n        let allSquares = new Array<Square>(64);\r\n        for(let i = 0;i < 64;i++){\r\n            allSquares[i] = squares[Math.floor(i/8)][i % 8]\r\n        }\r\n        setSquaresHighlighted(allSquares,false);\r\n        setSelectedSquare(sq);\r\n    }\r\n    const endTurn = (redTurn: boolean) => {\r\n        setRedsTurn(!redTurn);\r\n        setIsFirstMove(true);\r\n        selectSquare(null);\r\n        setStartingSquare(null)\r\n        selectPiece(null);\r\n        let allSquares = new Array<Square>(64);\r\n        for(let i = 0;i < 64;i++){\r\n            allSquares[i] = squares[Math.floor(i/8)][i % 8]\r\n        }\r\n        setSquaresHighlighted(allSquares,false);\r\n    }\r\n    let moves = new Array<Move>();\r\n    if(selectedSquare !== null && selectedPiece !== null && startingSquare !== null){\r\n\r\n        //if this is the first move of the turn, allow moving into nearby empty spaces.\r\n        if(isFirstMove || selectedSquare.piece !== selectedPiece){\r\n            moves = moves.concat(getAdjacentEmptySquares(selectedSquare,squares,selectedPiece).map((square :Square) => {\r\n                return {destination: square,deletes: (selectedSquare.piece as Piece).color !== selectedPiece.color ? selectedSquare : null, endsTurn: selectedSquare.piece === selectedPiece}\r\n            })).filter((move: Move) => {\r\n                return move.destination.position.row !== startingSquare.position.row || move.destination.position.col !== startingSquare.position.col\r\n            })\r\n        }\r\n        if(selectedSquare.piece === selectedPiece || selectedSquare.piece === null){\r\n            //Add any squares that kill nearby enemies.\r\n            moves = moves.concat(getAdjacentEnemyPieces(selectedSquare,squares,selectedPiece).filter((sq: Square) => {\r\n                return (getAdjacentEmptySquares(sq,squares,selectedPiece)).filter((empty: Square) => {\r\n                    return empty.position.row !== selectedSquare.position.row || empty.position.col !== selectedSquare.position.col;\r\n                }).length > 0\r\n            }).map((place: Square) => {\r\n                    return {destination: place,deletes: null, endsTurn: false}\r\n            }));\r\n        }\r\n\r\n\r\n        \r\n        //Currently breaks in a case where two different moves have the same destination; instead of highlighting destinations, it should highlight the piece to delete then let you select a square from that piece.\r\n        //If no moves can be made, the other player gets their turn.\r\n        if(moves.length === 0 && isFirstMove){\r\n            setStartingSquare(null);\r\n            selectSquare(null);\r\n            selectPiece(null);\r\n        }\r\n        else if(moves.length === 0){\r\n            endTurn(redsTurn);\r\n        }\r\n        else{\r\n            for(const move of moves){\r\n                if(!squares[move.destination.position.row][move.destination.position.col].highlighted){\r\n                    setSquaresHighlighted([move.destination],true)  \r\n                }\r\n            }\r\n        }\r\n    }\r\n        return (\r\n        <div className=\"container\">\r\n        {squares.map((row: Square[],rowIndex: number) => {\r\n            return (\r\n                    <div data-testid=\"checkers-row\" className=\"board-row\" key={rowIndex}>\r\n                        {row.map((square: Square,col: number) => {\r\n                            let output: SquareProps = {\r\n                                square: squares[rowIndex][col],\r\n                                redsTurn: redsTurn,\r\n                                moves: moves,\r\n                                selectSquare: selectSquare,\r\n                                movePiece: (move: Move) => {movePiece(startingSquare,move)},\r\n                                firstMove: isFirstMove,\r\n                                setFirstMove: setIsFirstMove,\r\n                                selectPiece: selectPiece,\r\n                                selectedPiece: selectedPiece,\r\n                                startingSquare: startingSquare,\r\n                                selectStartingSquare: setStartingSquare,\r\n                                endTurn: () => {endTurn(redsTurn)},\r\n                                child: <></>    \r\n                            }\r\n    \r\n                            if(square.piece !== null && square.piece.color === \"black\"){\r\n                                output.child = <span className=\"piece\" data-testid=\"black-piece\">{square.piece.king ? \"*\" : \"\"}</span>\r\n                                return CheckersSquare(output);\r\n                            }\r\n                            else if(square.piece !== null && square.piece.color === \"red\"){\r\n                                output.child = <span className=\"piece red\" data-testid=\"red-piece\">{square.piece.king ? \"*\" : \"\"}</span>\r\n                                return CheckersSquare(output);\r\n                            }\r\n                            return CheckersSquare(output);\r\n    \r\n                        })\r\n                    }\r\n                </div>\r\n                )\r\n            })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n","import {useState} from 'react'\r\nimport { moveEmitHelpers } from 'typescript';\r\nimport {Move, Piece, Square} from \"../components/CheckersBoard\"\r\n\r\nexport function useSquares(): [Array<Array<Square>>,(square: Square | null,move: Move) => void,(squares: Array<Square>,highlight: boolean) => void]{\r\n\r\n    const newBoard = () => {\r\n        let output = new Array<Array<Square>>(8);\r\n        \r\n        for(let row = 0;row < 8;row++){\r\n            let newRow = new Array<Square>(8);\r\n            for(let col = 0;col < 8;col++){\r\n                let color: \"black\" | \"white\" = row % 2 !== col % 2 ? \"black\" : \"white\"\r\n                let pieceColor: \"black\" | \"red\" = \"red\"\r\n                if(row < 3){\r\n                    pieceColor = \"black\";\r\n                    let piece = color === \"black\" ? {color: pieceColor, king: false} : null;\r\n                    newRow[col] = ({position: {row: row,col: col},piece: piece,color: color,highlighted: false});\r\n                }\r\n                else if(row > 4){\r\n                    let piece = color === \"black\" ? {color: pieceColor, king: false} : null;\r\n                    newRow[col] = ({position: {row: row,col: col},piece: piece,color: color,highlighted: false});\r\n                }\r\n                else{\r\n                    newRow[col] = ({position: {row: row,col: col},piece: null,color: color,highlighted: false});\r\n                }\r\n            }\r\n            output[row] = newRow;\r\n        }\r\n        \r\n        return output;\r\n    }\r\n    \r\n\r\n    const [squares, updateSquares] = useState(newBoard);\r\n\r\n\r\n    const movePiece = (start: Square | null, move: Move) => {\r\n        const newSquares = new Array<Array<Square>>().concat(squares);\r\n        if(move.destination.piece !== null){\r\n            throw Error(\"Tried to move to an occupied space!\")\r\n        }\r\n        else if(start === null){\r\n            return;\r\n        }\r\n        newSquares[move.destination.position.row][move.destination.position.col].piece = start.piece;\r\n        newSquares[start.position.row][start.position.col].piece = null;\r\n        if(move.deletes !== null){\r\n            newSquares[move.deletes.position.row][move.deletes.position.col].piece = null;\r\n        }\r\n        for(const row of newSquares){\r\n            for(const square of row){\r\n                square.highlighted = false;\r\n            }\r\n        }\r\n        if(move.destination.position.row === 0 && (newSquares[move.destination.position.row][move.destination.position.col].piece as Piece).color === \"red\" && !(newSquares[move.destination.position.row][move.destination.position.col].piece as Piece).king){\r\n            (newSquares[move.destination.position.row][move.destination.position.col].piece as Piece).king = true;\r\n        }\r\n        else if(move.destination.position.row === 7 && (newSquares[move.destination.position.row][move.destination.position.col].piece as Piece).color === \"black\" && !(newSquares[move.destination.position.row][move.destination.position.col].piece as Piece).king){\r\n            (newSquares[move.destination.position.row][move.destination.position.col].piece as Piece).king = true;\r\n        }\r\n        updateSquares(newSquares);\r\n\r\n    }\r\n    \r\n    const setSquaresHighlighted = (targetSquares: Array<Square>,highlight: boolean) => {\r\n        const newSquares = new Array<Array<Square>>().concat(squares)\r\n        for(const square of targetSquares){\r\n            newSquares[square.position.row][square.position.col].highlighted = highlight;\r\n        }\r\n        updateSquares(newSquares);\r\n    }\r\n\r\n    return [squares, movePiece, setSquaresHighlighted]\r\n\r\n}","import { DashboardProps } from \"../../App\";\r\nimport { Inactive } from \"../inactive/Inactive\";\r\nimport { CheckersBoard } from \"./CheckersBoard\";\r\n\r\nexport function CheckersDashboard(props: DashboardProps){\r\n    if(props.active){\r\n        return (\r\n            <section>\r\n                <CheckersBoard/>\r\n                <footer>\r\n                    <button className=\"link\" onClick={props.disable}>description</button>\r\n                </footer>\r\n            </section>\r\n        )\r\n    }\r\n    else{\r\n        return <Inactive enabler={props.enable}/>\r\n    }\r\n}","import { useState } from 'react';\r\nimport './App.scss';\r\nimport {TicTacToeDashboard} from \"./tic-tac-toe/components/TicTacToeDashboard\";\r\nimport {Changelog} from \"./info/changelog/Changelog\";\r\nimport { Todo } from './info/Todo/Todo';\r\nimport Cookies from \"universal-cookie\";\r\nimport Button from \"react-bootstrap/Button\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { CheckersDashboard } from './Checkers/components/CheckersDashboard';\r\n\r\nexport interface inactiveProps {\r\n  enabler: () => void\r\n}\r\n\r\nexport interface DashboardProps {\r\n  enable: () => void\r\n  disable: () => void\r\n  active: boolean\r\n}\r\n\r\nfunction App() {\r\n  const [viewing, updateViewing] = useState(() => {return new Array<(props: any) => JSX.Element>();});\r\n  function addViewing(component: (props: any) => JSX.Element): void{\r\n    updateViewing(viewing.concat([component]))\r\n  }\r\n\r\n  function stopViewing(component: (props: any) => JSX.Element): void{\r\n    const i = viewing.indexOf(component);\r\n    if(i !== -1){\r\n      updateViewing(viewing.slice(0,i).concat(viewing.slice(i+1,viewing.length)));\r\n    }\r\n  }\r\n\r\n  function viewNothing(): void{\r\n    updateViewing(new Array<(props: any) => JSX.Element>());\r\n  }\r\n\r\n  async function setCookie(): Promise<void>{\r\n    const cookies = new Cookies();\r\n    cookies.set(\"test\",\"this is a test\");\r\n  }\r\n\r\n  function viewCookie(): void{\r\n    const cookies = new Cookies();\r\n    if(cookies.get(\"test\")){\r\n      alert(\"You have a cookie!\");\r\n    }\r\n    else{\r\n      alert(\"You are cookieless!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n  <section>\r\n    <div>\r\n      Hi! my name is Lucas Driscoll (email <a href = \"mailto:lucasd@udel.edu\">lucasd@udel.edu</a>), and this is the first page of my CISC 275-010 portfolio! this page is hosted on github pages using <a href=\"https://github.com/Lukerd-29-00/Portfolio\">this repository</a>.\r\n    </div>\r\n    <hr/>\r\n    {<TicTacToeDashboard disable={() =>{stopViewing(TicTacToeDashboard)}} enable={() =>{addViewing(TicTacToeDashboard)}} active={viewing.includes(TicTacToeDashboard)}/>}\r\n    <hr/>\r\n    <div>\r\n    Click this button to get a cookie! (This was created using the example in the readme of the universal-cookie github repository.) <a href=\"https://github.com/Lukerd-29-00/Portfolio/blob/master/src/App.tsx\">click here</a> to view the source code.\r\n    </div>\r\n    <div>\r\n      <button id=\"cookie\" onClick = {setCookie}/>\r\n    </div>\r\n    <br/>\r\n    <div>\r\n      <Button onClick={viewCookie}>see if cookie is present</Button>\r\n    </div>\r\n    <hr/>\r\n    <CheckersDashboard disable={() => {stopViewing(CheckersDashboard)}} enable={()=>{addViewing(CheckersDashboard)}} active={viewing.includes(CheckersDashboard)}/>\r\n    <hr/>\r\n    <footer>\r\n      <Changelog disable = {() => {stopViewing(Changelog)}} enable={() => {addViewing(Changelog)}} active={viewing.includes(Changelog)}/>\r\n      {viewing.includes(Changelog) || viewing.includes(Todo) ? <hr/> : <></>}\r\n      <Todo disable={() => {stopViewing(Todo)}} enable={() => {addViewing(Todo)}} active={viewing.includes(Todo)}/>\r\n      {viewing.includes(Todo) ? <hr/> : <></>}\r\n      <button className=\"link\" onClick={viewNothing}>Hide all</button>\r\n    </footer>\r\n  </section>\r\n  </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}