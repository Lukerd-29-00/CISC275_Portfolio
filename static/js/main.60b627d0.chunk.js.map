{"version":3,"sources":["tic-tac-toe/hooks/useRows.ts","tic-tac-toe/components/TicTacToeBoard.tsx","tic-tac-toe/inactive/Inactive.tsx","tic-tac-toe/components/TicTacToeDashboard.tsx","info/changelog/inactive/inactive.tsx","info/changelog/Changelog.tsx","info/Todo/inactive/Inactive.tsx","info/Todo/Todo.tsx","Checkers/inactive/Inactive.tsx","Checkers/components/CheckersSquare.tsx","Checkers/components/CheckersBoard.tsx","Checkers/hooks/UseSquares.ts","Checkers/components/CheckersDashboard.tsx","App.tsx","index.tsx"],"names":["emptySquares","output","Array","i","length","row","j","isValidTurn","turn","TicTacToeBoard","props","useState","rows","updateRows","column","newRows","newRow","useRows","updateSquare","clearBoard","changeTurn","winner","setWinner","newWinner","board","victory_triplets","tie","lastTurn","ctr","getSquare","win","counter","X","O","empty","cmp","square","Winner","className","map","array","value","onClick","disabled","Math","floor","Error","Inactive","enabler","href","TicTacToeDashboard","active","disable","enable","func","Changelog","weeks","week_one","week_two","push","week","Todo","setNoSquaresHighlighted","setSquaresHighlighted","col","CheckersSquare","squareSelected","highlighted","squareColor","piece","selected","setActive","movePiece","position","children","getTargets","firstMove","undefined","king","color","filter","newOutput","pos","posTargets","concat","CheckersBoard","pieceColor","squares","updateSquares","currentPosition","newPosition","targets","destination","positions","highlight","newSquares","useSquares","rowIndex","CheckersDashboard","App","viewing","updateViewing","addViewing","component","stopViewing","indexOf","slice","a","Cookies","set","includes","Button","get","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60b627d0.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction emptySquares(){\r\n    const output = Array<Array<\"X\" | \"O\" | null>>(3);\r\n    for(let i = 0;i < output.length;i++){\r\n        let row = new Array<null>(3);\r\n        for(let j = 0;j < row.length;j++){\r\n            row[j] = null;\r\n        }\r\n    output[i] = row;\r\n    }\r\n    return output;\r\n}\r\n\r\nexport function useRows(): [Array<Array<\"X\" | \"O\" | null>>,(column: number, row: number, turn: \"X\" | \"O\") => undefined, () => void]{\r\n    const [rows, updateRows] = useState(emptySquares);\r\n    const updateSquare = (column: number,row: number,turn: \"X\" | \"O\") => {\r\n        let newRows = new Array<Array<\"X\" | \"O\" | null>>(3);\r\n        let newRow = new Array<\"X\" | \"O\" | null>(3);\r\n        for(let i = 0;i < newRow.length;i++){\r\n            if(i !== column){\r\n                newRow[i] = rows[row][i]\r\n            }\r\n            else{\r\n                newRow[i] = turn;\r\n            }\r\n        }\r\n        for(let i = 0;i < newRows.length;i++){\r\n            if(i !== row){\r\n                newRows[i] = rows[i]\r\n            }\r\n            else{\r\n                newRows[i] = newRow;\r\n            }\r\n        }\r\n        updateRows(newRows);\r\n        return undefined;\r\n        \r\n    }\r\n    const emptyAll = () => {\r\n        updateRows(emptySquares());\r\n    }\r\n    return [rows, updateSquare, emptyAll];\r\n\r\n}","import { useState } from \"react\";\r\nimport { useRows } from \"../hooks/useRows\";\r\n\r\ninterface empty {\r\n\r\n}\r\n\r\nfunction isValidTurn(turn: string):turn is \"X\" | \"O\"{\r\n    return turn === \"X\" || turn === \"O\";\r\n}\r\n\r\nexport function TicTacToeBoard(props: empty): JSX.Element{\r\n    const [rows, updateSquare, clearBoard] = useRows();\r\n    const [turn, changeTurn] = useState(\"X\");\r\n    const [winner, setWinner] = useState(\"nobody\");\r\n    let newWinner = null;\r\n    if(isValidTurn(turn)){\r\n        newWinner = Winner(rows,turn);\r\n    }\r\n    if(newWinner !== null && winner === \"nobody\"){\r\n        setWinner(newWinner);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <div className=\"game-info\">\r\n            {winner === \"nobody\" ? <p>{turn}'s turn</p> : winner === \"tie\" ? <p>Tie!</p> : <p>Winner: {winner}</p>}\r\n        </div>\r\n        <div className=\"game-board\">\r\n            {rows.map((row: Array<\"X\" | \"O\" | null>,i: number, array: Array<Array<\"X\" | \"O\" | null>>) => {\r\n                return <div key={i} className=\"board-row\">\r\n                    {array[i].map((value: \"X\" | \"O\" | null,j: number) => {\r\n                        if(isValidTurn(turn)){\r\n                            return <button key={Math.floor(i/3) + j % 3} onClick={() => {updateSquare(j,i,turn); changeTurn(turn === \"X\" ? \"O\" : \"X\")}} disabled={winner !== \"nobody\" || rows[i][j] != null}>{value}</button>\r\n                        }\r\n                        else{\r\n                            throw Error(`Invalid player ${turn}`);\r\n                        }\r\n                    })}\r\n                </div>\r\n            })}\r\n            <button onClick={() => {setWinner(\"nobody\"); clearBoard(); changeTurn(\"X\");}}>reset</button>\r\n        </div>\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction getSquare(board: Array<Array<\"X\" | \"O\" | null>>,i: number): \"X\" | \"O\" | null{\r\n    return board[Math.floor(i/3)][i % 3]\r\n}\r\n\r\ninterface Counter {\r\n    X: number,\r\n    O: number,\r\n    empty: number\r\n}\r\n\r\nfunction Winner(board: Array<Array<\"X\" | \"O\" | null>>,turn: \"X\" | \"O\"): \"X\" | \"O\" | \"tie\" | null{\r\n    const victory_triplets = [\r\n        [0,1,2],\r\n        [0,3,6],\r\n        [0,4,8],\r\n        [1,4,7],\r\n        [2,5,8],\r\n        [3,4,5],\r\n        [6,4,2],\r\n        [6,7,8]\r\n    ]\r\n    let tie = true;\r\n    let lastTurn = true;\r\n    let ctr = 0;\r\n    for(let i = 0;i < 9;i++){\r\n        if(getSquare(board,i) === null){\r\n            ctr++;\r\n        }\r\n    }\r\n    if(ctr >= 2){\r\n        lastTurn = false;\r\n    }\r\n    for(let win = 0;win < victory_triplets.length;win++){\r\n        let counter: Counter = {X: 0,O: 0,empty: 0}\r\n        let cmp = getSquare(board,victory_triplets[win][0])\r\n        for(let i = 0;i < 3;i++){\r\n            let square = getSquare(board,victory_triplets[win][i]);\r\n            if(square === null){\r\n                counter.empty++;\r\n            }\r\n            else if(square === \"X\"){\r\n                counter.X++;\r\n            }\r\n            else{\r\n                counter.O++;\r\n            }\r\n\r\n        }\r\n        if(counter.X === 3 || counter.O === 3){\r\n            return cmp;\r\n        }\r\n        if(lastTurn && turn === \"X\"){\r\n            counter.O--;\r\n        }\r\n        else if(lastTurn && turn === \"O\"){\r\n            counter.X--;\r\n        }\r\n        if((counter.X + counter.empty === 3) || (counter.O + counter.empty === 3)){\r\n            tie = false;\r\n        }\r\n    }\r\n    return tie ? \"tie\" : null;\r\n}","import { inactiveProps } from \"../../App\"\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return (\r\n    <div>\r\n        <h2><button className=\"link\" onClick={props.enabler}>Tic-Tac-Toe</button></h2>\r\n        <p>This is based on this <a href=\"https://reactjs.org/tutorial/tutorial.html\">React tutorial</a>, but it uses hooks and function components instead of the class-based approach. The stying is a slight modification of the css presented in that tutorial.</p>\r\n    </div>\r\n    )\r\n}","import { TicTacToeBoard } from \"./TicTacToeBoard\";\r\nimport { Inactive } from \"../inactive/Inactive\";\r\nimport { DashboardProps } from \"../../App\";\r\n\r\nexport function TicTacToeDashboard(props: DashboardProps){\r\n    return props.active ? (\r\n        <section>\r\n            <div>\r\n                <TicTacToeBoard />\r\n            </div>\r\n            <footer>\r\n                <button className=\"small-link\" onClick={props.disable}>description</button>\r\n            </footer>\r\n        </section>\r\n\r\n    ) : (\r\n        <Inactive enabler = {props.enable}/>\r\n    )\r\n}","interface func {\r\n    func: () => void\r\n}\r\nexport function Inactive(props: func){\r\n    return (\r\n        <button className=\"link\" onClick={props.func}>Changelog</button>\r\n    )\r\n\r\n}","import { Inactive } from \"./inactive/inactive\";\r\n\r\ninterface ChangelogProps {\r\n    disable: () => void,\r\n    enable: () => void,\r\n    active: boolean,\r\n}\r\n\r\nexport function Changelog(props: ChangelogProps){\r\n    if(props.active){\r\n        let weeks = new Array<Array<string>>();\r\n        let week_one = new Array<string>();\r\n        let week_two = new Array<string>();\r\n        weeks.push(week_one);\r\n        weeks.push(week_two)\r\n        week_one.push(\"Created this page for the portfolio and added my name, email, and the repository this page is being hosted from to it.\");\r\n        week_one.push(\"Created the tic-tac-toe game and added it to this page (see the game above for the description.)\");\r\n        week_one.push(\"Added the changelog and the todo list to this page.\")\r\n        week_one.push(\"Added a button to hide all open apps to this page.\")\r\n        week_one.push(\"Added interface to show or hide react components to view different projects.\")\r\n        week_one.push(\"Updated tic-tac-toe game to tie when the game can no longer be won.\")\r\n\r\n        week_two.push(\"Added checkers board that the pieces can move in (The project is still a work in progress.\")\r\n        week_two.push(\"Added the cookie module with a button to add a cookie to the browser and a button to detect if the cookie has been issued.\")\r\n\r\n    \r\n        return <section>\r\n            <div>\r\n                {weeks.map((week: Array<string>, i: number) => {\r\n                    return <div>\r\n                        <h1 className=\"large-bold\">Week {i+1}</h1>\r\n                        <ul>\r\n                            {week.map((value: string, j: number) => {\r\n                            return <li key = {j}><p>{value}</p></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <footer>\r\n                    <button className=\"small-link\" onClick={props.disable}>collapse</button>\r\n                </footer>\r\n        </section>\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <Inactive func={props.enable}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import { inactiveProps } from \"../../../App\";\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return ( \r\n        <div>\r\n            <button className=\"link\" onClick={props.enabler}>Todo</button>\r\n        </div>\r\n    );\r\n}","\r\nimport { Inactive } from \"./inactive/Inactive\";\r\n\r\ninterface TodoProps{\r\n    disable: () => void,\r\n    enable: () => void,\r\n    active: boolean,\r\n}\r\n\r\nexport function Todo(props: TodoProps): JSX.Element{\r\n    if(props.active){\r\n        let weeks = new Array<Array<string>>();\r\n        let week_one = new Array<string>();\r\n        let week_two = new Array<string>();\r\n        weeks.push(week_one);\r\n        weeks.push(week_two)\r\n        week_one.push(\"Add a singleplayer mode with a basic AI to tic-tac-toe.\");\r\n        week_one.push(\"Add a game of checkers to the portfolio.\");\r\n        week_one.push(\"Add a cookie generator that puts a non-functional cookie in your browser.\")\r\n\r\n        week_two.push(\"Finish Checkers game\")\r\n        week_two.push(\"Create a bootstrap-styled page\")\r\n        \r\n    \r\n        return <section>\r\n            <div>\r\n                {weeks.map((week: Array<string>, i: number) => {\r\n                    return <div>\r\n                        <h1 className=\"large-bold\">Week {i+2}</h1>\r\n                        <ul>\r\n                            {week.map((value: string, j: number) => {\r\n                            return <li key = {j}><p>{value}</p></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <footer>\r\n                    <button className=\"small-link\" onClick={props.disable}>collapse</button>\r\n                </footer>\r\n        </section>\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <Inactive enabler={props.enable}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import { inactiveProps } from \"../../App\"\r\n\r\nexport function Inactive(props: inactiveProps){\r\n    return (\r\n    <div>\r\n        <h2><button className=\"link\" onClick={props.enabler}>Checkers (WIP)</button></h2>\r\n        <p>This is a work-in-progress checkers game. It is not directly based on any tutorial. Currently, the pieces can only move to an empty, diagonally-adjacent square. Click on a piece to see where it can move, and click on a highlighted square to move. Click on a piece that was previously selected to deselect it.</p>\r\n    </div>\r\n    )\r\n}","import {Position} from \"./CheckersBoard\"\r\nexport interface SquareProps {\r\n    position: Position,\r\n    squareColor: \"white\" | \"black\",\r\n    piece: boolean,\r\n    highlighted: boolean,\r\n    squareSelected: boolean,\r\n    selected: boolean,\r\n    setActive: (arg: Position | null) => void,\r\n    setSquaresHighlighted: (position: Array<Position>,highlight: boolean) => void \r\n    getTargets: (position: Position | null) => Array<Position>\r\n    movePiece: (newPosition: Position) => void\r\n    children: JSX.Element | undefined\r\n}\r\n\r\nexport function setNoSquaresHighlighted(setSquaresHighlighted: ((position: Array<Position>,highlight: boolean) => void)){\r\n    for(let row = 0;row < 8;row++){\r\n        for(let col = 0;col < 8;col++){\r\n            setSquaresHighlighted([{row: row,col: col}],false);\r\n        }\r\n    }\r\n}\r\n\r\nexport function CheckersSquare(props: SquareProps){\r\n    if(!props.squareSelected){\r\n    return (\r\n        <div key={props.position.col} className=\"col-sm\">\r\n            <button className={props.squareColor === \"white\" ? \"square\" : \"square dark\"} disabled={(!props.piece) && !props.selected} onClick={props.selected ? () => {props.setActive(null); setNoSquaresHighlighted(props.setSquaresHighlighted);} : () => {props.setActive(props.position); props.setSquaresHighlighted(props.getTargets(props.position),true)}}>\r\n                {props.children}\r\n            </button>\r\n        </div>\r\n    )\r\n    }\r\n    else{\r\n        return (\r\n            <div key={props.position.col} className=\"col-sm\">\r\n            <button className={props.highlighted ? \"square highlighted\" : props.squareColor === \"white\" ? \"square\" : \"square dark\"} disabled={(!props.highlighted || props.piece) && !props.selected} onClick={props.selected ? () => {props.setActive(null); setNoSquaresHighlighted(props.setSquaresHighlighted);} : () => {props.setActive(null); setNoSquaresHighlighted(props.setSquaresHighlighted); props.movePiece(props.position)}}>\r\n                {props.children}\r\n            </button>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}","import {useState} from 'react'\r\nimport { useSquares } from '../hooks/UseSquares'\r\nimport { CheckersSquare, SquareProps } from './CheckersSquare';\r\nexport interface Position {\r\n    row: number,\r\n    col: number\r\n}\r\n\r\n//red pieces are on the bottom, black are on the top. Top row is zero, bottom row is 7.\r\nexport interface Piece {\r\n    color: \"black\" | \"red\"\r\n    king: boolean\r\n}\r\n\r\nexport interface Square{\r\n    piece: Piece | null\r\n    color: \"white\" | \"black\"\r\n    highlighted: boolean\r\n}\r\n\r\nexport interface Move {\r\n    deletes: Array<Position>\r\n    path: Array<Position>\r\n}\r\n\r\ninterface NoProps {\r\n\r\n}\r\n\r\nfunction getTargets(position: Position | null,board: Array<Array<Square>>,empty: boolean = false,piece?: Piece): Array<Position>{\r\n    let output = new Array<Position>();\r\n    let firstMove = false;\r\n    if(position == null){\r\n        return output;\r\n    }\r\n    if(piece === undefined){\r\n        piece = (board[position.row][position.col].piece as Piece);\r\n        firstMove = true;\r\n    }\r\n    if(piece.king){\r\n        output.push({row: position.row+1,col:position.col+1});\r\n        output.push({row:position.row+1,col:position.col-1});\r\n        output.push({row:position.row-1,col:position.col+1});\r\n        output.push({row:position.row-1,col:position.col-1});\r\n    }\r\n    else if(piece.color === \"black\"){\r\n        output.push({row: position.row+1,col:position.col+1});\r\n        output.push({row:position.row+1,col:position.col-1});\r\n    }\r\n    else{\r\n        output.push({row:position.row-1,col:position.col+1});\r\n        output.push({row:position.row-1,col:position.col-1});\r\n    }\r\n    //ignore spaces outside the board.\r\n    output = output.filter((value: Position) => {\r\n        if(value.row < 8 && value.row > -1 && value.col < 8 && value.col > -1){\r\n            return true;\r\n        }\r\n        return false;\r\n    })\r\n\r\n    let newOutput = new Array<Position>();\r\n    if(!empty){\r\n        output = output.filter((value: Position) => {\r\n            return board[value.row][value.col].piece === null;\r\n        })\r\n        for(const pos of output){\r\n            let posTargets = getTargets(pos,board,true,piece);\r\n            if(posTargets.length > 0 || firstMove){\r\n                newOutput.push(pos);\r\n                newOutput = newOutput.concat(posTargets);\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        output = output.filter((value: Position) => {\r\n            return board[value.row][value.col].piece !== null;\r\n        })\r\n        for(const pos of output){\r\n            let posTargets = getTargets(pos,board,false,piece);\r\n            if(posTargets.length > 0 || firstMove){\r\n                newOutput.push(pos)\r\n                newOutput.concat(posTargets);\r\n            }\r\n        }\r\n    }\r\n    return newOutput;\r\n}\r\n\r\nexport function CheckersBoard(props: NoProps){\r\n    const [squares, movePiece, setSquaresHighlighted] = useSquares();\r\n    const [active, setActive] = useState<Position | null>(null);\r\n        return (\r\n        <div className=\"container\">\r\n        {squares.map((row: Square[],rowIndex: number) => {\r\n            return (\r\n                    <div className=\"board-row\">\r\n                        {row.map((square: Square,col: number) => {\r\n                            let output: SquareProps = {position: {row: rowIndex,col: col},squareColor: squares[rowIndex][col].color,piece: squares[rowIndex][col].piece !== null,setActive: setActive,highlighted:squares[rowIndex][col].highlighted,setSquaresHighlighted: setSquaresHighlighted,getTargets: ((position: Position | null) => {return getTargets(position,squares)}),squareSelected: active !== null,movePiece: active !== null ? (newPosition: Position) => {movePiece(active,newPosition)} : (newPosition: Position) => {return;},children: <></>, selected: active !== null ? active.row === rowIndex && active.col === col : false}\r\n    \r\n                            if(square.piece !== null && square.piece.color === \"black\"){\r\n                                output.children = <span className=\"dot\"/>\r\n                                return CheckersSquare(output);\r\n                            }\r\n                            else if(square.piece !== null && square.piece.color === \"red\"){\r\n                                output.children = <span className=\"dot red\"/>\r\n                                return CheckersSquare(output);\r\n                            }\r\n                            return CheckersSquare(output);\r\n    \r\n                        })\r\n                    }\r\n                </div>\r\n                )\r\n            })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n","import {useState} from 'react'\r\nimport {Position, Square} from \"../components/CheckersBoard\"\r\n\r\nexport function useSquares(): any{\r\n\r\n    const newBoard = () => {\r\n        let output = new Array<Array<Square>>(8);\r\n        \r\n        for(let row = 0;row < 8;row++){\r\n            let newRow = new Array<Square>(8);\r\n            for(let col = 0;col < 8;col++){\r\n                let color: \"black\" | \"white\" = row % 2 !== col % 2 ? \"black\" : \"white\"\r\n                let pieceColor: \"black\" | \"red\" = \"red\"\r\n                if(row < 3){\r\n                    pieceColor = \"black\";\r\n                    let piece = color === \"black\" ? {color: pieceColor, king: false} : null;\r\n                    newRow[col] = ({piece: piece,color: color,highlighted: false});\r\n                }\r\n                else if(row > 4){\r\n                    let piece = color === \"black\" ? {color: pieceColor, king: false} : null;\r\n                    newRow[col] = ({piece: piece,color: color,highlighted: false});\r\n                }\r\n                else{\r\n                    newRow[col] = ({piece: null,color: color,highlighted: false});\r\n                }\r\n            }\r\n            output[row] = newRow;\r\n        }\r\n        \r\n        return output;\r\n    }\r\n    \r\n\r\n    const [squares, updateSquares] = useState(newBoard);\r\n\r\n    const movePiece = (currentPosition: Position,newPosition: Position,targets: Array<Position>) => {\r\n        let output = new Array<Array<Square>>().concat(squares);\r\n\r\n        const piece = output[currentPosition.row][currentPosition.col].piece;\r\n        const destination = output[newPosition.row][newPosition.col]\r\n        if(output[newPosition.row][newPosition.col].piece == null){\r\n            output[newPosition.row][newPosition.col] = {piece: piece,color: destination.color,highlighted: false}\r\n            output[currentPosition.row][currentPosition.col] = {piece: null,color: output[currentPosition.row][currentPosition.col].color,highlighted:false}\r\n            updateSquares(output);\r\n        }\r\n        else{\r\n            throw new Error(\"Tried to move a piece into an occupied square!\")\r\n        }\r\n    }\r\n\r\n    const setSquaresHighlighted = (positions: Array<Position>,highlight: boolean) => {\r\n        let newSquares = new Array<Array<Square>>().concat(squares);\r\n        for(const position of positions){\r\n            newSquares[position.row][position.col].highlighted = highlight;\r\n        }\r\n        updateSquares(newSquares);\r\n    }\r\n    return [squares,movePiece,setSquaresHighlighted]\r\n\r\n}","import { DashboardProps } from \"../../App\";\r\nimport { Inactive } from \"../inactive/Inactive\";\r\nimport { CheckersBoard } from \"./CheckersBoard\";\r\n\r\nexport function CheckersDashboard(props: DashboardProps){\r\n    if(props.active){\r\n        return (\r\n            <section>\r\n                <CheckersBoard/>\r\n                <footer>\r\n                    <button className=\"link\" onClick={props.disable}>description</button>\r\n                </footer>\r\n            </section>\r\n        )\r\n    }\r\n    else{\r\n        return <Inactive enabler={props.enable}/>\r\n    }\r\n}","import { useState } from 'react';\r\nimport './App.scss';\r\nimport {TicTacToeDashboard} from \"./tic-tac-toe/components/TicTacToeDashboard\";\r\nimport {Changelog} from \"./info/changelog/Changelog\";\r\nimport { Todo } from './info/Todo/Todo';\r\nimport Cookies from \"universal-cookie\";\r\nimport Button from \"react-bootstrap/Button\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { CheckersDashboard } from './Checkers/components/CheckersDashboard';\r\n\r\nexport interface inactiveProps {\r\n  enabler: () => void\r\n}\r\n\r\nexport interface DashboardProps {\r\n  enable: () => void\r\n  disable: () => void\r\n  active: boolean\r\n}\r\n\r\nfunction App() {\r\n  const [viewing, updateViewing] = useState(() => {return new Array<(props: any) => JSX.Element>();});\r\n  function addViewing(component: (props: any) => JSX.Element): void{\r\n    updateViewing(viewing.concat([component]))\r\n  }\r\n\r\n  function stopViewing(component: (props: any) => JSX.Element): void{\r\n    const i = viewing.indexOf(component);\r\n    if(i !== -1){\r\n      updateViewing(viewing.slice(0,i).concat(viewing.slice(i+1,viewing.length)));\r\n    }\r\n  }\r\n\r\n  function viewNothing(): void{\r\n    updateViewing(new Array<(props: any) => JSX.Element>());\r\n  }\r\n\r\n  async function setCookie(): Promise<void>{\r\n    const cookies = new Cookies();\r\n    cookies.set(\"test\",\"this is a test\");\r\n  }\r\n\r\n  function viewCookie(): void{\r\n    const cookies = new Cookies();\r\n    if(cookies.get(\"test\")){\r\n      alert(\"You have a cookie!\");\r\n    }\r\n    else{\r\n      alert(\"You are cookieless!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n  <>\r\n  <section>\r\n    <div>\r\n      Hi! my name is Lucas Driscoll (email <a href = \"mailto:lucasd@udel.edu\">lucasd@udel.edu</a>), and this is the first page of my CISC 275-010 portfolio! this page is hosted on github pages using <a href=\"https://github.com/Lukerd-29-00/Portfolio\">this repository</a>.\r\n    </div>\r\n    <hr/>\r\n    {<TicTacToeDashboard disable={() =>{stopViewing(TicTacToeDashboard)}} enable={() =>{addViewing(TicTacToeDashboard)}} active={viewing.includes(TicTacToeDashboard)}/>}\r\n    <hr/>\r\n    <div>\r\n    Click this button to get a cookie! (This was created using the example in the readme of the universal-cookie github repository.)\r\n    </div>\r\n    <div>\r\n      <Button onClick = {setCookie}>get cookie</Button>\r\n    </div>\r\n    <br/>\r\n    <div>\r\n      <Button onClick={viewCookie}>see if cookie is present</Button>\r\n    </div>\r\n    <hr/>\r\n    <CheckersDashboard disable={() => {stopViewing(CheckersDashboard)}} enable={()=>{addViewing(CheckersDashboard)}} active={viewing.includes(CheckersDashboard)}/>\r\n    <hr/>\r\n    <footer>\r\n      <Changelog disable = {() => {stopViewing(Changelog)}} enable={() => {addViewing(Changelog)}} active={viewing.includes(Changelog)}/>\r\n      {viewing.includes(Changelog) || viewing.includes(Todo) ? <hr/> : <></>}\r\n      <Todo disable={() => {stopViewing(Todo)}} enable={() => {addViewing(Todo)}} active={viewing.includes(Todo)}/>\r\n      {viewing.includes(Todo) ? <hr/> : <></>}\r\n      <button className=\"link\" onClick={viewNothing}>Hide all</button>\r\n    </footer>\r\n  </section>\r\n  </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}